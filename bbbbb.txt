\documentclass{article}
\usepackage{amsmath}
\usepackage{algorithm}
\usepackage{algpseudocode}
\usepackage{listings}
\usepackage{xcolor}

\title{QCAST-Enhanced Protocol: Phase-wise Implementation Breakdown}
\author{Quantum Network Protocol Team}
\date{\today}

\begin{document}
\maketitle

\section{Introduction}
This document provides a detailed phase-wise breakdown of the QCAST-Enhanced protocol implementation, focusing on its four main phases: Source-Destination (SD) pair generation, Path Selection, Link State Exchange, and Recovery/Swapping mechanisms.

\section{Phase 1: SD Pair Generation}
The QCAST-Enhanced protocol initiates with the generation of source-destination pairs:

\begin{itemize}
    \item \textbf{Implementation}: Uses the inherited \texttt{generate\_sd\_pairs()} method from base class
    \item \textbf{Process}:
    \begin{itemize}
        \item Randomly selects pairs of nodes from the network
        \item Number of pairs determined by \texttt{num\_requests} parameter
        \item Ensures no self-loops (source ≠ destination)
        \item Combines new requests with deferred requests from previous slots
    \end{itemize}
    \item \textbf{Key Features}:
    \begin{itemize}
        \item Maintains history of deferred requests
        \item Integrates with slot-based simulation framework
        \item Supports dynamic request generation
    \end{itemize}
\end{itemize}

\section{Phase 2: Path Selection}
QCAST-Enhanced implements an intelligent path selection mechanism:

\begin{itemize}
    \item \textbf{Implementation}: Uses \texttt{enhanced\_path\_selection()} method
    \item \textbf{Process}:
    \begin{itemize}
        \item Maintains path history (last 10 successful paths)
        \item Tracks entanglement statistics for path segments
        \item Uses historical data for path reliability estimation
        \item Implements smart path selection based on:
        \begin{itemize}
            \item Path length
            \item Historical reliability
            \item Current network state
            \item Resource availability
        \end{itemize}
    \end{itemize}
    \item \textbf{Key Features}:
    \begin{itemize}
        \item Path history management with size limit
        \item Segment-based reliability tracking
        \item Age-based statistics cleanup
        \item Adaptive path selection based on historical performance
    \end{itemize}
\end{itemize}

\section{Phase 3: Link State Exchange}
The protocol implements an enhanced link state exchange mechanism:

\begin{itemize}
    \item \textbf{Implementation}: Inherits and extends base class \texttt{link\_state\_exchange()}
    \item \textbf{Process}:
    \begin{itemize}
        \item Periodic exchange (every 10 slots)
        \item Limited to \texttt{link\_state\_range} hops
        \item Tracks channel status:
        \begin{itemize}
            \item Reservation state
            \item Entanglement state
            \item Channel width
            \item Success probability
        \end{itemize}
    \end{itemize}
    \item \textbf{Key Features}:
    \begin{itemize}
        \item Efficient state propagation
        \item Limited scope to reduce overhead
        \item Integration with path selection
        \item Real-time network state awareness
    \end{itemize}
\end{itemize}

\section{Phase 4: Recovery and Swapping}
QCAST-Enhanced implements a sophisticated recovery and swapping mechanism:

\begin{itemize}
    \item \textbf{Implementation}: Uses \texttt{enhanced\_entanglement()} method
    \item \textbf{Process}:
    \begin{itemize}
        \item Two-phase recovery strategy:
        \begin{enumerate}
            \item Direct entanglement attempt
            \item Smart recovery based on path characteristics
        \end{enumerate}
        \item Recovery strategy selection based on:
        \begin{itemize}
            \item Path length (≤ 3 hops: XOR-based)
            \item Path reliability (> 0.7: XOR-based)
            \item Otherwise: Segmentation-based
        \end{itemize}
    \end{itemize}
    \item \textbf{Key Features}:
    \begin{itemize}
        \item Adaptive recovery strategy selection
        \item Statistics-based decision making
        \item Efficient resource utilization
        \item Performance tracking and updates
    \end{itemize}
\end{itemize}

\section{Implementation Details}

\subsection{Key Methods}
\begin{lstlisting}[language=Python]
def enhanced_entanglement(self, path, s, d):
    # Phase 4: Enhanced entanglement with smart recovery
    if self.attempt_entanglement(path):
        self.update_entanglement_stats(path, True)
        return True, False

    metrics = self.calculate_path_metrics(path)
    
    if metrics['length'] <= 3 or metrics['reliability'] > 0.7:
        # XOR-based recovery for short/reliable paths
        if RecoveryStrategies.xor_based_recovery(self, path, s, d):
            self.update_entanglement_stats(path, True)
            return True, True
    else:
        # Segmentation for longer paths
        if RecoveryStrategies.segmentation_based_recovery(self, path, s, d):
            self.update_entanglement_stats(path, True)
            return True, True

    self.update_entanglement_stats(path, False)
    return False, False
\end{lstlisting}

\subsection{Statistics Management}
\begin{lstlisting}[language=Python]
def update_entanglement_stats(self, path, success):
    # Cleanup old statistics
    current_time = self.current_slot
    self.entanglement_stats = {
        k: v for k, v in self.entanglement_stats.items() 
        if current_time - v.get('last_updated', 0) <= self.max_stats_age
    }
    
    # Update statistics for current path
    for i in range(len(path) - 1):
        segment = (path[i], path[i+1])
        if segment not in self.entanglement_stats:
            self.entanglement_stats[segment] = {
                'success': 0, 
                'total': 0,
                'last_updated': current_time
            }
        self.entanglement_stats[segment]['total'] += 1
        if success:
            self.entanglement_stats[segment]['success'] += 1
        self.entanglement_stats[segment]['last_updated'] = current_time
\end{lstlisting}

\section{Conclusion}
The QCAST-Enhanced protocol implements a sophisticated four-phase approach to quantum network simulation, with particular emphasis on:
\begin{itemize}
    \item Intelligent path selection using historical data
    \item Adaptive recovery strategies
    \item Efficient resource management
    \item Performance optimization through statistics-based decisions
\end{itemize}

The protocol's success lies in its ability to learn from past performance and adapt its strategies accordingly, making it particularly effective for large-scale quantum networks.

\end{document} 